#########################################################################################################
# Problem Set 4
# Course: Econometrics 2
# Question 1
# Goal: we investigate whether there is any cointegrating relation between our three variables
#########################################################################################################
# Organize the working enviroment
#########################################################################################################
# Cleaning the working environment
#########################################################################################################

rm(list = ls())

#########################################################################################################
## Load the required packages
#########################################################################################################

if (!require(stringr)) {
  install.packages("stringr")
  library(stringr)
}

if (!require(lubridate)) {
  install.packages("lubridate")
  library(lubridate)
}

if (!require(ggplot2)) {
  install.packages("ggplot2")
  library(ggplot2)
}

if (!require(stargazer)) {
  install.packages("stargazer")
  library(stargazer)
}

if (!require(dplyr)) {
  install.packages("dplyr")
  library(dplyr)
}

if (!require(quantmod)) {
  install.packages("quantmod")
  library(quantmod)
}

if (!require(lmtest)) {
  install.packages("lmtest")
  library(lmtest)
}

if (!require(xtable)) {
  install.packages("xtable")
  library(xtable)
}

if (!require(forecast)) {
  install.packages("forecast")
  library(forecast)
}

if (!require(ARDL)) {
  install.packages("ARDL")
  library(ARDL)
}

if (!require(dynlm)) {
  install.packages("dynlm")
  library(dynlm)
}

if (!require(sandwich)) {
  install.packages("sandwich")
  library(sandwich)
}

if (!require(vars)) {
  install.packages("vars")
  library(vars)
}

if (!require(data.table)) {
  install.packages("data.table")
  library(data.table)
}

#########################################################################################################
## Clean the data
#########################################################################################################

data_br <- fread("data/brazil_data.csv")
data_usa <- fread("data/usa_data.csv")

#########################################################################################################
## Changing variable names:
#########################################################################################################

colnames(data_br) <- c("date", "exchange_rate", "ipca", "x")
colnames(data_usa) <- c("date", "cpi_index")

#########################################################################################################
## 1.1 - Subset of data - 1995 to 2019 
#########################################################################################################

data_br <- data_br[, -4]

data_br <- data_br %>%
  mutate(date = gsub("\\.", "-", date))

data_br$date <- gsub("\\b1\\b", "10", data_br$date)

data_br <- data_br %>%
  mutate(date = paste(date, "01", sep = "-")) %>%       
  mutate(date = ymd(date))                              

data_usa <- data_usa %>%
  mutate(date = ymd(date))

data_br <- subset(data_br, date >= ymd("1995-01-01") & date <= ymd("2019-12-01"))
data_usa <- subset(data_usa, date >= ymd("1995-01-01") & date <= ymd("2019-12-01"))

data <- merge(data_br, data_usa, by = "date")

#########################################################################################################
## 1.2 - Transforming the variables 
#########################################################################################################

data <- data %>%
  mutate(ln_ipca = 100 * (log(ipca) - log(ipca[date == ymd("1995-01-01")])),
         ln_exchange_rate = 100 * (log(exchange_rate) - log(exchange_rate[date == ymd("1995-01-01")])),
         ln_cpi_index = 100 * (log(cpi_index) - log(cpi_index[date == ymd("1995-01-01")])))

#########################################################################################################
## 1.4 - Define Z_{t} = a'Y_{t} 
#########################################################################################################

data <- data %>%
  mutate(z = ln_ipca - ln_exchange_rate - ln_cpi_index)

#########################################################################################################
## 1.5 - Looking at the data
#########################################################################################################

#########################################################################################################
## 1.5 - Log IPCA
#########################################################################################################


gg <- ggplot(data = data, aes(x = date)) +
  theme_bw(base_size = 25) +
  theme(plot.margin = unit(c(5, 7, 2, 2), "mm")) +
  xlab("Month") + ylab("Log - IPCA") +
  geom_line(
    aes(y = ln_ipca), size = 1.5, color = "#0000FF"
  ) +
  scale_x_date(date_breaks = "5 year", date_labels = "%Y")


print(gg)

## Saving the last plot

ggsave("figures_question_1/figure_ln_ipca.pdf", width = 11, height = 8.5)

#########################################################################################################
## 1.5 - Log Exchange Rate
#########################################################################################################


gg <- ggplot(data = data, aes(x = data$date)) +
  theme_bw(base_size = 25) +
  theme(plot.margin = unit(c(5, 7, 2, 2), "mm")) +
  xlab("Month") + ylab("Log - Exchange Rate") +
  geom_line(
    aes(y = data$ln_exchange_rate), size = 1.5, color = "#0000FF"
  ) +
  scale_x_date(date_breaks = "5 year", date_labels = "%Y")


print(gg)

## Saving the last plot

ggsave("figures_question_1/figure_ln_exchange_rate.pdf", width = 11, height = 8.5)

########################################################################################################
## 1.5 - Log CPI
#########################################################################################################


gg <- ggplot(data = data, aes(x = data$date)) +
  theme_bw(base_size = 25) +
  theme(plot.margin = unit(c(5, 7, 2, 2), "mm")) +
  xlab("Month") + ylab("Log - American CPI Index") +
  geom_line(
    aes(y = data$ln_cpi_index), size = 1.5, color = "#0000FF"
  ) +
  scale_x_date(date_breaks = "5 year", date_labels = "%Y")


print(gg)

## Saving the last plot

ggsave("figures_question_1/figure_ln_cpi_index.pdf", width = 11, height = 8.5)

#########################################################################################################
# We will use a Augmented
# Dickey-Fuller test with drift and time trend.
#########################################################################################################
#########################################################################################################
# Preferred Augmented Dickey-Fuller Test
#########################################################################################################
# Run the test using BIC to choose the number of lags
#########################################################################################################
# Log IPCA
#########################################################################################################

ln_ipca_trend <- ur.df(
  y = data$ln_ipca,
  type = "trend",
  lags = 12,
  selectlags = "BIC"
)

#########################################################################################################
# The test statistic is tau3 in the slides. Its critical values are reported at the bottom.
#########################################################################################################
print(summary(ln_ipca_trend))


#########################################################################################################
# Creating an array that receives the results
#########################################################################################################

summary_adf <- summary(ln_ipca_trend)
adf_matrix <- matrix(NA, nrow = 3, ncol = 4)
colnames(adf_matrix) <- c("Statistic","Critical Value (1%)", "Critical Value (5%)", "Critical Value (10%)")
row.names(adf_matrix) <- c("tau3", "phi2", "phi3")

adf_matrix[1,1] <- ln_ipca_trend@teststat[1,1]
adf_matrix[2,1] <- ln_ipca_trend@teststat[1,2]
adf_matrix[3,1] <- ln_ipca_trend@teststat[1,3]
adf_matrix[1,2] <- summary_adf@cval[1,1]
adf_matrix[1,3] <- summary_adf@cval[1,2]
adf_matrix[1,4] <- summary_adf@cval[1,3]
adf_matrix[2,2] <- summary_adf@cval[2,1]
adf_matrix[2,3] <- summary_adf@cval[2,2]
adf_matrix[2,4] <- summary_adf@cval[2,3]
adf_matrix[3,2] <- summary_adf@cval[3,1]
adf_matrix[3,3] <- summary_adf@cval[3,2]
adf_matrix[3,4] <- summary_adf@cval[3,3]

print(adf_matrix)

#########################################################################################################
## It allows you to create well-formatted
## tables from R data frames or matrices, and export
## them directly in LaTeX code to be included in a LaTeX document.
#########################################################################################################

table_latex <- xtable(
  adf_matrix,
  caption = "ADF Test with drift and time trend - Log IPCA",
  label = "ADF Test",
  align = rep("c", ncol(adf_matrix) + 1),
  digits = 3
)

print(table_latex, file = "figures_question_1/table_adf_test_ln_ipca.txt")

#########################################################################################################
# We will use a Augmented
# Dickey-Fuller test with drift and time trend.
#########################################################################################################
#########################################################################################################
# Preferred Augmented Dickey-Fuller Test
#########################################################################################################
# Run the test using BIC to choose the number of lags
#########################################################################################################
# Log Exchange Rate
#########################################################################################################

ln_exchange_rate_trend <- ur.df(
  y = data$ln_exchange_rate,
  type = "trend",
  lags = 12,
  selectlags = "BIC"
)

#########################################################################################################
# The test statistic is tau3 in the slides. Its critical values are reported at the bottom.
#########################################################################################################
print(summary(ln_exchange_rate_trend))


#########################################################################################################
# Creating an array that receives the results
#########################################################################################################

summary_adf <- summary(ln_exchange_rate_trend)
adf_matrix <- matrix(NA, nrow = 3, ncol = 4)
colnames(adf_matrix) <- c("Statistic","Critical Value (1%)", "Critical Value (5%)", "Critical Value (10%)")
row.names(adf_matrix) <- c("tau3", "phi2", "phi3")

adf_matrix[1,1] <- ln_exchange_rate_trend@teststat[1,1]
adf_matrix[2,1] <- ln_exchange_rate_trend@teststat[1,2]
adf_matrix[3,1] <- ln_exchange_rate_trend@teststat[1,3]
adf_matrix[1,2] <- summary_adf@cval[1,1]
adf_matrix[1,3] <- summary_adf@cval[1,2]
adf_matrix[1,4] <- summary_adf@cval[1,3]
adf_matrix[2,2] <- summary_adf@cval[2,1]
adf_matrix[2,3] <- summary_adf@cval[2,2]
adf_matrix[2,4] <- summary_adf@cval[2,3]
adf_matrix[3,2] <- summary_adf@cval[3,1]
adf_matrix[3,3] <- summary_adf@cval[3,2]
adf_matrix[3,4] <- summary_adf@cval[3,3]

print(adf_matrix)

#########################################################################################################
## It allows you to create well-formatted
## tables from R data frames or matrices, and export
## them directly in LaTeX code to be included in a LaTeX document.
#########################################################################################################

table_latex <- xtable(
  adf_matrix,
  caption = "ADF Test with drift and time trend - Log Exchange Rate",
  label = "ADF Test",
  align = rep("c", ncol(adf_matrix) + 1),
  digits = 3
)

print(table_latex, file = "figures_question_1/table_adf_test_ln_exchange_rate.txt")


#########################################################################################################
# We will use a Augmented
# Dickey-Fuller test with drift and time trend.
#########################################################################################################
#########################################################################################################
# Preferred Augmented Dickey-Fuller Test
#########################################################################################################
# Run the test using BIC to choose the number of lags
#########################################################################################################
# Log CPI Index
#########################################################################################################

ln_cpi_index_trend <- ur.df(
  y = data$ln_cpi_index,
  type = "trend",
  lags = 12,
  selectlags = "BIC"
)

#########################################################################################################
# The test statistic is tau3 in the slides. Its critical values are reported at the bottom.
#########################################################################################################
print(summary(ln_cpi_index_trend))


#########################################################################################################
# Creating an array that receives the results
#########################################################################################################

summary_adf <- summary(ln_cpi_index_trend)
adf_matrix <- matrix(NA, nrow = 3, ncol = 4)
colnames(adf_matrix) <- c("Statistic","Critical Value (1%)", "Critical Value (5%)", "Critical Value (10%)")
row.names(adf_matrix) <- c("tau3", "phi2", "phi3")

adf_matrix[1,1] <- ln_cpi_index_trend@teststat[1,1]
adf_matrix[2,1] <- ln_cpi_index_trend@teststat[1,2]
adf_matrix[3,1] <- ln_cpi_index_trend@teststat[1,3]
adf_matrix[1,2] <- summary_adf@cval[1,1]
adf_matrix[1,3] <- summary_adf@cval[1,2]
adf_matrix[1,4] <- summary_adf@cval[1,3]
adf_matrix[2,2] <- summary_adf@cval[2,1]
adf_matrix[2,3] <- summary_adf@cval[2,2]
adf_matrix[2,4] <- summary_adf@cval[2,3]
adf_matrix[3,2] <- summary_adf@cval[3,1]
adf_matrix[3,3] <- summary_adf@cval[3,2]
adf_matrix[3,4] <- summary_adf@cval[3,3]

print(adf_matrix)

#########################################################################################################
## It allows you to create well-formatted
## tables from R data frames or matrices, and export
## them directly in LaTeX code to be included in a LaTeX document.
#########################################################################################################

table_latex <- xtable(
  adf_matrix,
  caption = "ADF Test with drift and time trend - Log American CPI Index",
  label = "ADF Test",
  align = rep("c", ncol(adf_matrix) + 1),
  digits = 3
)

print(table_latex, file = "figures_question_1/table_adf_test_ln_cpi_index.txt")

#########################################################################################################
# Taking the first Difference
#########################################################################################################

first_data<- data %>%
  mutate(first_diff_ln_ipca = c(NA, diff(ln_ipca))) %>%
  mutate(first_diff_ln_exchange_rate = c(NA, diff(ln_exchange_rate))) %>%
  mutate(first_diff_ln_cpi_index = c(NA, diff(ln_cpi_index))) %>%
  mutate(first_diff_z = c(NA, diff(z)))

first_data <- first_data[-1, ]

#########################################################################################################
# We will use a Augmented
# Dickey-Fuller test with drift and time trend.
#########################################################################################################
#########################################################################################################
# Preferred Augmented Dickey-Fuller Test
#########################################################################################################
# Run the test using BIC to choose the number of lags
#########################################################################################################
# First Difference Log IPCA
#########################################################################################################

first_ln_ipca_trend <- ur.df(
  y = first_data$first_diff_ln_ipca,
  type = "trend",
  lags = 12,
  selectlags = "BIC"
)

#########################################################################################################
# The test statistic is tau3 in the slides. Its critical values are reported at the bottom.
#########################################################################################################

print(summary(first_ln_ipca_trend))

#########################################################################################################
# Creating an array that receives the results
#########################################################################################################

summary_adf <- summary(first_ln_ipca_trend)
adf_matrix <- matrix(NA, nrow = 3, ncol = 4)
colnames(adf_matrix) <- c("Statistic","Critical Value (1%)", "Critical Value (5%)", "Critical Value (10%)")
row.names(adf_matrix) <- c("tau3", "phi2", "phi3")

adf_matrix[1,1] <- first_ln_ipca_trend@teststat[1,1]
adf_matrix[2,1] <- first_ln_ipca_trend@teststat[1,2]
adf_matrix[3,1] <- first_ln_ipca_trend@teststat[1,3]
adf_matrix[1,2] <- summary_adf@cval[1,1]
adf_matrix[1,3] <- summary_adf@cval[1,2]
adf_matrix[1,4] <- summary_adf@cval[1,3]
adf_matrix[2,2] <- summary_adf@cval[2,1]
adf_matrix[2,3] <- summary_adf@cval[2,2]
adf_matrix[2,4] <- summary_adf@cval[2,3]
adf_matrix[3,2] <- summary_adf@cval[3,1]
adf_matrix[3,3] <- summary_adf@cval[3,2]
adf_matrix[3,4] <- summary_adf@cval[3,3]

print(adf_matrix)

#########################################################################################################
## It allows you to create well-formatted
## tables from R data frames or matrices, and export
## them directly in LaTeX code to be included in a LaTeX document.
#########################################################################################################

table_latex <- xtable(
  adf_matrix,
  caption = "ADF Test with drift and time trend - First Difference Log IPCA",
  label = "ADF Test",
  align = rep("c", ncol(adf_matrix) + 1),
  digits = 3
)

print(table_latex, file = "figures_question_1/table_adf_test_first_diff_ipca.txt")


#########################################################################################################
# We will use a Augmented
# Dickey-Fuller test with drift and time trend.
#########################################################################################################
#########################################################################################################
# Preferred Augmented Dickey-Fuller Test
#########################################################################################################
# Run the test using BIC to choose the number of lags
#########################################################################################################
# First Difference Exchange Rate
#########################################################################################################

first_ln_exchange_rate_trend <- ur.df(
  y = first_data$first_diff_ln_exchange_rate,
  type = "trend",
  lags = 12,
  selectlags = "BIC"
)

#########################################################################################################
# The test statistic is tau3 in the slides. Its critical values are reported at the bottom.
#########################################################################################################

print(summary(first_ln_exchange_rate_trend))

#########################################################################################################
# Creating an array that receives the results
#########################################################################################################

summary_adf <- summary(first_ln_exchange_rate_trend)
adf_matrix <- matrix(NA, nrow = 3, ncol = 4)
colnames(adf_matrix) <- c("Statistic","Critical Value (1%)", "Critical Value (5%)", "Critical Value (10%)")
row.names(adf_matrix) <- c("tau3", "phi2", "phi3")

adf_matrix[1,1] <- first_ln_exchange_rate_trend@teststat[1,1]
adf_matrix[2,1] <- first_ln_exchange_rate_trend@teststat[1,2]
adf_matrix[3,1] <- first_ln_exchange_rate_trend@teststat[1,3]
adf_matrix[1,2] <- summary_adf@cval[1,1]
adf_matrix[1,3] <- summary_adf@cval[1,2]
adf_matrix[1,4] <- summary_adf@cval[1,3]
adf_matrix[2,2] <- summary_adf@cval[2,1]
adf_matrix[2,3] <- summary_adf@cval[2,2]
adf_matrix[2,4] <- summary_adf@cval[2,3]
adf_matrix[3,2] <- summary_adf@cval[3,1]
adf_matrix[3,3] <- summary_adf@cval[3,2]
adf_matrix[3,4] <- summary_adf@cval[3,3]

print(adf_matrix)

#########################################################################################################
## It allows you to create well-formatted
## tables from R data frames or matrices, and export
## them directly in LaTeX code to be included in a LaTeX document.
#########################################################################################################

table_latex <- xtable(
  adf_matrix,
  caption = "ADF Test with drift and time trend - First Difference Log Exchange Rate",
  label = "ADF Test",
  align = rep("c", ncol(adf_matrix) + 1),
  digits = 3
)

print(table_latex, file = "figures_question_1/table_adf_test_first_diff_exchange_rate.txt")


#########################################################################################################
# First Difference CPI Index
#########################################################################################################

first_ln_cpi_index_trend <- ur.df(
  y = first_data$first_diff_ln_cpi_index,
  type = "trend",
  lags = 12,
  selectlags = "BIC"
)

#########################################################################################################
# The test statistic is tau3 in the slides. Its critical values are reported at the bottom.
#########################################################################################################

print(summary(first_ln_cpi_index_trend))

#########################################################################################################
# Creating an array that receives the results
#########################################################################################################

summary_adf <- summary(first_ln_cpi_index_trend)
adf_matrix <- matrix(NA, nrow = 3, ncol = 4)
colnames(adf_matrix) <- c("Statistic","Critical Value (1%)", "Critical Value (5%)", "Critical Value (10%)")
row.names(adf_matrix) <- c("tau3", "phi2", "phi3")

adf_matrix[1,1] <- first_ln_cpi_index_trend@teststat[1,1]
adf_matrix[2,1] <- first_ln_cpi_index_trend@teststat[1,2]
adf_matrix[3,1] <- first_ln_cpi_index_trend@teststat[1,3]
adf_matrix[1,2] <- summary_adf@cval[1,1]
adf_matrix[1,3] <- summary_adf@cval[1,2]
adf_matrix[1,4] <- summary_adf@cval[1,3]
adf_matrix[2,2] <- summary_adf@cval[2,1]
adf_matrix[2,3] <- summary_adf@cval[2,2]
adf_matrix[2,4] <- summary_adf@cval[2,3]
adf_matrix[3,2] <- summary_adf@cval[3,1]
adf_matrix[3,3] <- summary_adf@cval[3,2]
adf_matrix[3,4] <- summary_adf@cval[3,3]

print(adf_matrix)

#########################################################################################################
## It allows you to create well-formatted
## tables from R data frames or matrices, and export
## them directly in LaTeX code to be included in a LaTeX document.
#########################################################################################################

table_latex <- xtable(
  adf_matrix,
  caption = "ADF Test with drift and time trend - First Difference Log American CPI Index",
  label = "ADF Test",
  align = rep("c", ncol(adf_matrix) + 1),
  digits = 3
)

print(table_latex, file = "figures_question_1/table_adf_test_first_diff_cpi_index.txt")

########################################################################################################
## 1.7 - Z
#########################################################################################################

gg <- ggplot(data = data, aes(x = data$date)) +
  theme_bw(base_size = 25) +
  theme(plot.margin = unit(c(5, 7, 2, 2), "mm")) +
  xlab("Month") + ylab("Z") +
  geom_line(
    aes(y = data$z), size = 1.5, color = "#0000FF"
  ) +
  scale_x_date(date_breaks = "5 year", date_labels = "%Y")


print(gg)

## Saving the last plot

ggsave("figures_question_1/figure_z.pdf", width = 11, height = 8.5)

########################################################################################################
## 1.8 - ADF Z
########################################################################################################
#########################################################################################################
# We will use a Augmented
# Dickey-Fuller test with drift and time trend.
#########################################################################################################
#########################################################################################################
# Preferred Augmented Dickey-Fuller Test
#########################################################################################################
# Run the test using BIC to choose the number of lags
#########################################################################################################
# Log IPCA
#########################################################################################################

z_trend <- ur.df(
  y = data$z,
  type = "trend",
  lags = 12,
  selectlags = "BIC"
)

#########################################################################################################
# The test statistic is tau3 in the slides. Its critical values are reported at the bottom.
#########################################################################################################
print(summary(z_trend))


#########################################################################################################
# Creating an array that receives the results
#########################################################################################################

summary_adf <- summary(z_trend)
adf_matrix <- matrix(NA, nrow = 3, ncol = 4)
colnames(adf_matrix) <- c("Statistic","Critical Value (1%)", "Critical Value (5%)", "Critical Value (10%)")
row.names(adf_matrix) <- c("tau3", "phi2", "phi3")

adf_matrix[1,1] <- z_trend@teststat[1,1]
adf_matrix[2,1] <- z_trend@teststat[1,2]
adf_matrix[3,1] <- z_trend@teststat[1,3]
adf_matrix[1,2] <- summary_adf@cval[1,1]
adf_matrix[1,3] <- summary_adf@cval[1,2]
adf_matrix[1,4] <- summary_adf@cval[1,3]
adf_matrix[2,2] <- summary_adf@cval[2,1]
adf_matrix[2,3] <- summary_adf@cval[2,2]
adf_matrix[2,4] <- summary_adf@cval[2,3]
adf_matrix[3,2] <- summary_adf@cval[3,1]
adf_matrix[3,3] <- summary_adf@cval[3,2]
adf_matrix[3,4] <- summary_adf@cval[3,3]

print(adf_matrix)

#########################################################################################################
## It allows you to create well-formatted
## tables from R data frames or matrices, and export
## them directly in LaTeX code to be included in a LaTeX document.
#########################################################################################################

table_latex <- xtable(
  adf_matrix,
  caption = "ADF Test with drift and time trend - Z",
  label = "ADF Test",
  align = rep("c", ncol(adf_matrix) + 1),
  digits = 3
)

print(table_latex, file = "figures_question_1/table_adf_test_z.txt")

#########################################################################################################
# First Difference CPI Index
#########################################################################################################

first_z_trend <- ur.df(
  y = first_data$first_diff_z,
  type = "trend",
  lags = 12,
  selectlags = "BIC"
)

#########################################################################################################
# The test statistic is tau3 in the slides. Its critical values are reported at the bottom.
#########################################################################################################

print(summary(first_z_trend))

#########################################################################################################
# Creating an array that receives the results
#########################################################################################################

summary_adf <- summary(first_z_trend)
adf_matrix <- matrix(NA, nrow = 3, ncol = 4)
colnames(adf_matrix) <- c("Statistic","Critical Value (1%)", "Critical Value (5%)", "Critical Value (10%)")
row.names(adf_matrix) <- c("tau3", "phi2", "phi3")

adf_matrix[1,1] <- first_z_trend@teststat[1,1]
adf_matrix[2,1] <- first_z_trend@teststat[1,2]
adf_matrix[3,1] <- first_z_trend@teststat[1,3]
adf_matrix[1,2] <- summary_adf@cval[1,1]
adf_matrix[1,3] <- summary_adf@cval[1,2]
adf_matrix[1,4] <- summary_adf@cval[1,3]
adf_matrix[2,2] <- summary_adf@cval[2,1]
adf_matrix[2,3] <- summary_adf@cval[2,2]
adf_matrix[2,4] <- summary_adf@cval[2,3]
adf_matrix[3,2] <- summary_adf@cval[3,1]
adf_matrix[3,3] <- summary_adf@cval[3,2]
adf_matrix[3,4] <- summary_adf@cval[3,3]

print(adf_matrix)

#########################################################################################################
## It allows you to create well-formatted
## tables from R data frames or matrices, and export
## them directly in LaTeX code to be included in a LaTeX document.
#########################################################################################################

table_latex <- xtable(
  adf_matrix,
  caption = "ADF Test with drift and time trend - First Difference Z",
  label = "ADF Test",
  align = rep("c", ncol(adf_matrix) + 1),
  digits = 3
)

print(table_latex, file = "figures_question_1/table_adf_test_first_diff_z.txt")

